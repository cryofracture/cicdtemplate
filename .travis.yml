dist: xenial
language: bash 
sudo: required
env:
  - tf_init_cli_options="-input=false" 
  - tf_validation_cli_options="" 
  - tf_plan_cli_options="-lock=false -input=false"
  - tf_apply_cli_options="-auto-approve -input=false"
  - AWS_ACCESS_KEY="$AWS_ACCESS_KEY"
  - AWS_SECRET_KEY="$AWS_SECRET_KEY"
  - tf_version=0.13.2 
  - tf_init_cli_options="-input=false" 
  - tf_validation_cli_options="" 
  - tf_plan_cli_options="-lock=false -input=false" 
  - tf_apply_cli_options="-auto-approve -input=false"

services:
    - docker

branches:
  only:
    - master

# Install dependencies
before_install:
  - wget https://releases.hashicorp.com/terraform/"$tf_version"/terraform_"$tf_version"_linux_amd64.zip
  - unzip terraform_"$tf_version"_linux_amd64.zip
  - sudo mv terraform /usr/local/bin/
  - rm terraform_"$tf_version"_linux_amd64.zip

# Terraform Plan and Apply
# Plan only on pull requests, Apply on merged code
jobs:
  include:
    - stage: test app
      if: type IN (push)
      script:
        - python -m pytest -v
    - stage: master-branch terraform plan
      # Only run terraform validate and plan state if within a pull request
      if: type IN (pull_request)
      script:
        - echo "Executing Terraform Plan on pull request code"
        - terraform init $tf_init_cli_options
        - terraform validate $tf_validation_cli_options
        - terraform plan $tf_plan_cli_options
    - stage: feature branch terraform plan/apply
      if: type IN (push) and branch = feature
      script:
        - echo "Executing Terraform Plan on pull request code"
        - terraform init $tf_init_cli_options
        - terraform validate $tf_validation_cli_options
        - terraform plan $tf_plan_cli_options
    - stage: terraform apply
      # Only run terraform apply stage if outside of a pull request
      if: type IN (push) and branch = master
      script:
        - echo "Executing Terraform Apply on merged code"
        - terraform init $tf_init_cli_options
        - terraform apply $tf_apply_cli_options

after_success:
  - sh .travis/deploy_dockerhub.sh
  - pip install --user awscli
  - export PATH=$PATH:$HOME/.local/bin
  # ECR Deployment
  - sh .travis/deploy_ecr.sh
  # Heroku Deployment:
  #- test "$TRAVIS_BRANCH" = "master" && sh .travis/deploy_heroku.sh