dist: focal
addons:
  apt:
    sources:
      - sourceline: 'ppa:deadsnakes/ppa'

before_install:
  - sudo apt-get update

  - sudo apt install software-properties-common

  - sudo apt install python3.9

services:
  - docker


install:
  - python3.9 -m pip install pycspr
  - python3.9 -m pip install -r requirements.txt

# Terraform Plan and Apply
# Plan only on pull requests, Apply on merged code
jobs:
  include:
    - stage test pycspr:
      if: type IN (push) and branch = /^feature-.*$/
      script:
        - python3.9 casper-python-sdk/how_tos/how_to_consume_events.py  --node-host 16.162.124.124 --node-port-sse 9999
        - python3.9 casper-python-sdk/how_tos/how_to_query_a_node.py  --node-host 16.162.124.124 --node-port-sse 9999 --node-port-rpc 7777 --node-port-rest 8888

    - stage test docker install:
      if: type IN (push) and branch = /^feature-.*$/
      script:
        - echo "Testing Docker install"

    - stage test docker build:
      iif: type IN (push) and branch = /^feature-.*$/
      script:
        - echo "Testing pycspr Docker image build"
        - docker build -t cryofracture/$TRAVIS_BRANCH .
        - docker run -d -p 127.0.0.1:80:4567 cryofracture/$TRAVIS_BRANCH" # /bin/sh -c "cd /root/sinatra; bundle exec foreman start;"
        - docker ps -a





        # - python3.9 casper-python-sdk/how_tos/how_to_query_a_node.py --node-host 16.162.124.125 --node-port-sse --node-port-rpc 7777 --node-port-rest 8888 --cp1-secret-key-path $

    # - stage: test app
    #   if: type IN (push)
    #   script:
    #     - python -m pytest -v
    # - stage: master-branch terraform plan
    #   # Only run terraform validate and plan state if within a pull request
    #   if: type IN (pull_request)
    #   script:
    #     - echo "Executing Terraform Plan on pull request code"
    #     - terraform init 
    #     - terraform validate 
    #     - terraform plan 
    # - stage: feature branch terraform plan/apply
    #   if: type IN (push) and branch = feature
    #   script:
    #     - echo "Executing Terraform Plan on pull request code"
    #     - terraform init 
    #     - terraform validate 
    #     - terraform plan 
    # - stage: terraform apply
    #   # Only run terraform apply stage if outside of a pull request
    #   if: type IN (push) and branch = master
    #   script:
    #     - echo "Executing Terraform Apply on merged code"
    #     # ECR Deployment
    #     - sh .travis/deploy_ecr.sh --aws $AWS_ACCOUNT --region $AWS_REGION
    #     - terraform init 
    #     - terraform apply 

    

# after_success:
#   - sh .travis/deploy_dockerhub.sh
  # Heroku Deployment:
  #- test "$TRAVIS_BRANCH" = "master" && sh .travis/deploy_heroku.sh